{"ast":null,"code":"import _regeneratorRuntime from\"/home/sofi/Documentos/SpatialArdhi/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/sofi/Documentos/SpatialArdhi/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import jwt_decode from\"jwt-decode\";import tokenRefresh from\"./tokenRefresh\";var tokenAuth=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(token){var _jwt_decode,exp,expirationTime;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_jwt_decode=jwt_decode(token),exp=_jwt_decode.exp;// Refresh the token a minute early to avoid latency issues\nexpirationTime=exp*1000-60000;if(!(Date.now()>=expirationTime)){_context.next=12;break;}localStorage.removeItem('access');token=tokenRefresh();if(!token){_context.next=9;break;}return _context.abrupt(\"return\");case 9:console.log(\"expiro\");localStorage.clear();return _context.abrupt(\"return\",false);case 12:case\"end\":return _context.stop();}}},_callee);}));return function tokenAuth(_x){return _ref.apply(this,arguments);};}();export default tokenAuth;","map":{"version":3,"sources":["/home/sofi/Documentos/SpatialArdhi/src/config/token.js"],"names":["jwt_decode","tokenRefresh","tokenAuth","token","exp","expirationTime","Date","now","localStorage","removeItem","console","log","clear"],"mappings":"+SACA,MAAOA,CAAAA,UAAP,KAAuB,YAAvB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,GAAMC,CAAAA,SAAS,0FAAG,iBAAMC,KAAN,iKAEEH,UAAU,CAACG,KAAD,CAFZ,CAENC,GAFM,aAENA,GAFM,CAGd;AACMC,cAJQ,CAIUD,GAAG,CAAG,IAAP,CAAe,KAJxB,MAKVE,IAAI,CAACC,GAAL,IAAcF,cALJ,2BAMZG,YAAY,CAACC,UAAb,CAAwB,QAAxB,EACAN,KAAK,CAAGF,YAAY,EAApB,CAPY,IAQXE,KARW,iEAYVO,OAAO,CAACC,GAAR,CAAY,QAAZ,EACAH,YAAY,CAACI,KAAb,GAbU,gCAeH,KAfG,yDAAH,kBAATV,CAAAA,SAAS,4CAAf,CA0BA,cAAeA,CAAAA,SAAf","sourcesContent":["\nimport jwt_decode from \"jwt-decode\";\nimport tokenRefresh from \"./tokenRefresh\";\nconst tokenAuth = async(token) => {\n\n    const { exp } = jwt_decode(token)\n    // Refresh the token a minute early to avoid latency issues\n    const expirationTime = (exp * 1000) - 60000\n    if (Date.now() >= expirationTime) {\n      localStorage.removeItem('access')\n      token = tokenRefresh()\n    if(token){\n     return;\n    }\n    else {\n        console.log(\"expiro\")\n        localStorage.clear()\n        \n        return false;\n    }\n      // set LocalStorage here based on response;\n    } \n  \n}\n\n\n\n\n\nexport default tokenAuth;\n"]},"metadata":{},"sourceType":"module"}