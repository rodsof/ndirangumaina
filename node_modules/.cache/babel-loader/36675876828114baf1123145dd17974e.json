{"ast":null,"code":"var _jsxFileName = \"/home/sofi/Documentos/SpatialArdhi/src/context/DataContext.js\";\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport AuthContext from './auth/AuthContext';\nimport clientAxios from '../config/axios';\nexport const DataContext = createContext();\n\nconst DataProvider = props => {\n  const authContext = useContext(AuthContext);\n  const {\n    user,\n    autenticated\n  } = authContext;\n  const [data, saveData] = useState([]);\n  const [search, searchData] = useState({\n    title: ''\n  });\n  const [searchMade, saveSearch] = useState(false);\n  const {\n    title\n  } = search;\n  useEffect(() => {\n    if (autenticated && user) {\n      const getData = async () => {\n        const response = await clientAxios.get('data/?format=json');\n        saveData(response.data);\n      };\n\n      getData();\n    }\n\n    if (searchMade) {\n      const getSearchData = async () => {\n        if (title !== \" \" && title !== undefined) {\n          const response = await clientAxios.get('data/?format=json', {\n            params: {\n              search: title\n            }\n          });\n          saveSearch(response.data);\n        }\n      };\n\n      getSearchData();\n    }\n  }, [search, user]);\n  return /*#__PURE__*/React.createElement(DataContext.Provider, {\n    value: {\n      data,\n      searchData,\n      saveData,\n      saveSearch\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default DataProvider;","map":{"version":3,"sources":["/home/sofi/Documentos/SpatialArdhi/src/context/DataContext.js"],"names":["React","createContext","useState","useEffect","useContext","AuthContext","clientAxios","DataContext","DataProvider","props","authContext","user","autenticated","data","saveData","search","searchData","title","searchMade","saveSearch","getData","response","get","getSearchData","undefined","params","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,EAAoDC,UAApD,QAAsE,OAAtE;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AAEA,OAAO,MAAMC,WAAW,GAAGN,aAAa,EAAjC;;AAEP,MAAMO,YAAY,GAAIC,KAAD,IAAW;AAE5B,QAAMC,WAAW,GAAGN,UAAU,CAACC,WAAD,CAA9B;AACA,QAAM;AAAEM,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAyBF,WAA/B;AAEA,QAAM,CAACG,IAAD,EAAOC,QAAP,IAAmBZ,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACa,MAAD,EAASC,UAAT,IAAuBd,QAAQ,CAAC;AAClCe,IAAAA,KAAK,EAAE;AAD2B,GAAD,CAArC;AAGA,QAAM,CAACC,UAAD,EAAaC,UAAb,IAA2BjB,QAAQ,CAAC,KAAD,CAAzC;AAEA,QAAM;AAAEe,IAAAA;AAAF,MAAYF,MAAlB;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIS,YAAY,IAAID,IAApB,EAA0B;AACtB,YAAMS,OAAO,GAAG,YAAY;AACxB,cAAMC,QAAQ,GAAG,MAAMf,WAAW,CAACgB,GAAZ,CAAgB,mBAAhB,CAAvB;AACAR,QAAAA,QAAQ,CAACO,QAAQ,CAACR,IAAV,CAAR;AACH,OAHD;;AAIAO,MAAAA,OAAO;AACV;;AAED,QAAIF,UAAJ,EAAgB;AAEZ,YAAMK,aAAa,GAAG,YAAY;AAC9B,YAAIN,KAAK,KAAK,GAAV,IAAiBA,KAAK,KAAKO,SAA/B,EAA0C;AACtC,gBAAMH,QAAQ,GAAG,MAAMf,WAAW,CAACgB,GAAZ,CAAgB,mBAAhB,EAAqC;AAAEG,YAAAA,MAAM,EAAE;AAAEV,cAAAA,MAAM,EAAEE;AAAV;AAAV,WAArC,CAAvB;AACAE,UAAAA,UAAU,CAACE,QAAQ,CAACR,IAAV,CAAV;AACC;AAEJ,OANL;;AAOAU,MAAAA,aAAa;AAChB;AAEJ,GArBQ,EAqBN,CAACR,MAAD,EAASJ,IAAT,CArBM,CAAT;AAuBA,sBACI,oBAAC,WAAD,CAAa,QAAb;AACI,IAAA,KAAK,EAAE;AACHE,MAAAA,IADG;AAEHG,MAAAA,UAFG;AAGHF,MAAAA,QAHG;AAIHK,MAAAA;AAJG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQKV,KAAK,CAACiB,QARX,CADJ;AAYH,CAhDD;;AAkDA,eAAelB,YAAf","sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\nimport AuthContext from './auth/AuthContext';\nimport clientAxios from '../config/axios';\n\nexport const DataContext = createContext();\n\nconst DataProvider = (props) => {\n\n    const authContext = useContext(AuthContext);\n    const { user, autenticated } = authContext;\n\n    const [data, saveData] = useState([]);\n    const [search, searchData] = useState({\n        title: '',\n    });\n    const [searchMade, saveSearch] = useState(false);\n\n    const { title } = search;\n\n    useEffect(() => {\n        if (autenticated && user) {\n            const getData = async () => {\n                const response = await clientAxios.get('data/?format=json');\n                saveData(response.data)\n            }\n            getData();\n        }\n\n        if (searchMade) {\n\n            const getSearchData = async () => {\n                if (title !== \" \" && title !== undefined) {\n                    const response = await clientAxios.get('data/?format=json', { params: { search: title } })\n                    saveSearch(response.data) \n                    }\n                 \n                }\n            getSearchData();\n        }\n\n    }, [search, user]);\n\n    return (\n        <DataContext.Provider\n            value={{\n                data,\n                searchData,\n                saveData,\n                saveSearch,\n            }}\n        >\n            {props.children}\n        </DataContext.Provider>\n    );\n}\n\nexport default DataProvider;"]},"metadata":{},"sourceType":"module"}