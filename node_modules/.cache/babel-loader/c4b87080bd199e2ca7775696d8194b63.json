{"ast":null,"code":"var _jsxFileName = \"/home/sofi/Documentos/SpatialArdhi/src/components/ResetPassword.js\";\nimport React from \"react\";\nimport { Button, Form, FormGroup, Input, Label, Alert } from \"reactstrap\";\nimport axios from \"axios\";\nimport { API_URL_RESETP, API_URL_SENDT } from \"../constants\";\n\nclass ResetPassword extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      token: \"\",\n      sent: null,\n      sentToken: null,\n      error: null,\n      errortoken: null,\n      errorpassword: null\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.defaultIfEmpty = value => {\n      return value === \"\" ? \"\" : value;\n    };\n\n    this.reset = e => {\n      e.preventDefault();\n      axios.post(API_URL_RESETP, this.state).then(res => {\n        // console.log(res.status);\n        if (res.status === 200) {\n          this.setState({\n            sent: \"Check your email\",\n            error: null\n          });\n        }\n      }).catch(error => this.setState({\n        error: \"There is no active user associated with this e-mail address or the password can not be changed\"\n      }));\n    };\n\n    this.sendtoken = e => {\n      e.preventDefault();\n      axios.post(API_URL_SENDT, this.state).then(res => {\n        // console.log(res.status);\n        if (res.status === 200) {\n          this.setState({\n            sent: \"Check your email\",\n            errortoken: null\n          });\n        }\n      }).catch(error => this.setState({\n        errortoken: \"Invalid token\"\n      }));\n    };\n\n    this.sendpassword = e => {\n      e.preventDefault();\n      axios.post(\"https://www.spatialardhi.com/estate/password_reset/confirm/\", this.state).then(res => {\n        // console.log(res.status);\n        if (res.status === 200) {\n          this.setState({\n            sent: \"Succesfully changed your password\",\n            errorpassword: null\n          });\n        }\n      }).catch(error => this.setState({\n        errorpassword: \"Invalid password\",\n        sent: null\n      }));\n    };\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem(\"refresh\")) {\n      this.props.history.push(\"/home\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"limiter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-login100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrap-login100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.reset,\n      encType: \"multipart/form-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, \"Email:\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"email\",\n      onChange: this.onChange,\n      value: this.defaultIfEmpty(this.state.email),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    })), this.state.error ? /*#__PURE__*/React.createElement(Alert, {\n      color: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 14\n      }\n    }, \" \", this.state.error, \" \") : null, !this.state.token ? /*#__PURE__*/React.createElement(Button, {\n      color: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 37\n      }\n    }, \"Send me a verification code\") : null), this.state.sent ? /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.sendtoken,\n      encType: \"multipart/form-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"token\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, \"Check your email and insert the code here\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"token\",\n      onChange: this.onChange,\n      value: this.defaultIfEmpty(this.state.token),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    })), this.state.errortoken ? /*#__PURE__*/React.createElement(Alert, {\n      color: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 14\n      }\n    }, \" \", this.state.errortoken, \" \") : null, /*#__PURE__*/React.createElement(Button, {\n      color: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }\n    }, \"Send\")) : null, this.state.sentToken ? /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.sendpassword,\n      encType: \"multipart/form-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, \"Check your email and insert the code here\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"password\",\n      onChange: this.onChange,\n      value: this.defaultIfEmpty(this.state.password),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      type: \"hidden\",\n      name: \"token\",\n      onChange: this.onChange,\n      value: this.defaultIfEmpty(this.state.token),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 18\n      }\n    })), this.state.errorpassword ? /*#__PURE__*/React.createElement(Alert, {\n      color: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 14\n      }\n    }, \" \", this.state.errorpassword, \" \") : null, /*#__PURE__*/React.createElement(Button, {\n      color: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }\n    }, \"Send\")) : null, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"text-danger\",\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 10\n      }\n    }, \" Home \"))));\n  }\n\n}\n\nexport default ResetPassword;","map":{"version":3,"sources":["/home/sofi/Documentos/SpatialArdhi/src/components/ResetPassword.js"],"names":["React","Button","Form","FormGroup","Input","Label","Alert","axios","API_URL_RESETP","API_URL_SENDT","ResetPassword","Component","state","email","password","token","sent","sentToken","error","errortoken","errorpassword","onChange","e","setState","target","name","value","defaultIfEmpty","reset","preventDefault","post","then","res","status","catch","sendtoken","sendpassword","componentDidMount","localStorage","getItem","props","history","push","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Button, Form, FormGroup, Input, Label, Alert } from \"reactstrap\";\nimport axios from \"axios\";\nimport { API_URL_RESETP, API_URL_SENDT } from \"../constants\";\nclass ResetPassword extends React.Component {\n\n  state = {\n    email: \"\",\n    password: \"\",\n    token: \"\",\n    sent: null,\n    sentToken: null,\n    error: null,\n    errortoken: null,\n    errorpassword: null\n  };\ncomponentDidMount(){\n  if (localStorage.getItem(\"refresh\")){\n    this.props.history.push(\"/home\");\n  }\n}\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  defaultIfEmpty = (value) => {\n    return value === \"\" ? \"\" : value;\n  };\n\n  reset= e => {\n    e.preventDefault();\n    axios.post(API_URL_RESETP, this.state ).then(res =>  {\n      // console.log(res.status);\n      if(res.status === 200) {\n        this.setState({ sent : \"Check your email\",\n        error: null\n      });\n      }\n      }).catch(error => this.setState({\n        error: \"There is no active user associated with this e-mail address or the password can not be changed\"\n      }));\n  };\n\n\n  sendtoken= e => {\n    e.preventDefault();\n    axios.post(API_URL_SENDT, this.state).then(res =>  {\n      // console.log(res.status);\n      if(res.status === 200) {\n        this.setState({ sent : \"Check your email\",\n        errortoken: null\n      });\n      }\n      }).catch(error => this.setState({\n        errortoken: \"Invalid token\",\n      }));\n  };\n\n\n  sendpassword= e => {\n    e.preventDefault();\n    axios.post(\"https://www.spatialardhi.com/estate/password_reset/confirm/\", this.state ).then(res =>  {\n      // console.log(res.status);\n      if(res.status === 200) {\n        this.setState({ sent : \"Succesfully changed your password\",\n        errorpassword: null\n      });\n      }\n      }).catch(error => this.setState({\n        errorpassword: \"Invalid password\",\n        sent: null\n      }));\n  };\n\n\n  render() {\n    return (\n      <div className=\"limiter\">\n        <div className=\"container-login100\">\n          <div className=\"wrap-login100\">\n            <Form onSubmit={this.reset} encType=\"multipart/form-data\">\n              <FormGroup>\n                <Label for=\"email\">Email:</Label>\n                <Input\n                  type=\"text\"\n                  name=\"email\"\n                  onChange={this.onChange}\n                  value={this.defaultIfEmpty(this.state.email)}\n                />\n              </FormGroup>\n              { this.state.error ? \n             <Alert  color=\"danger\"> {this.state.error} </Alert>  :\n             null\n            }\n              { !this.state.token ? <Button color=\"danger\">Send me a verification code</Button> : null }\n\t     </Form>\n\n       { this.state.sent ? \n              <Form onSubmit={this.sendtoken} encType=\"multipart/form-data\">\n              <FormGroup>\n                <Label for=\"token\">Check your email and insert the code here</Label>\n                <Input\n                  type=\"text\"\n                  name=\"token\"\n                  onChange={this.onChange}\n                  value={this.defaultIfEmpty(this.state.token)}\n                />\n              </FormGroup>\n               { this.state.errortoken ? \n             <Alert  color=\"danger\"> {this.state.errortoken} </Alert>  :\n             null\n            } \n              <Button color=\"danger\">Send</Button>\n       </Form>\n              : null\n  }\n\n{ this.state.sentToken ? \n              <Form onSubmit={this.sendpassword} encType=\"multipart/form-data\">\n              <FormGroup>\n                <Label for=\"password\">Check your email and insert the code here</Label>\n                <Input\n                  type=\"text\"\n                  name=\"password\"\n                  onChange={this.onChange}\n                  value={this.defaultIfEmpty(this.state.password)}\n                />\n                 <Input\n                  type=\"hidden\"\n                  name=\"token\"\n                  onChange={this.onChange}\n                  value={this.defaultIfEmpty(this.state.token)}\n                />\n              </FormGroup>\n               { this.state.errorpassword ? \n             <Alert  color=\"danger\"> {this.state.errorpassword} </Alert>  :\n             null\n            } \n              <Button color=\"danger\">Send</Button>\n       </Form>\n              : null\n  }\n\n         <a className=\"text-danger\" href=\"/\"> Home </a>\n\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\nexport default ResetPassword;\n"]},"metadata":{},"sourceType":"module"}