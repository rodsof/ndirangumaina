{"ast":null,"code":"var _jsxFileName = \"/home/sofi/Documentos/SpatialArdhi/src/components/Results.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { TransitionGroup } from \"react-transition-group\";\nimport Result from \"./Result\";\nimport { CardColumns } from \"reactstrap\";\nimport { slice, concat } from 'lodash';\n\nconst Results = ({\n  results,\n  active\n}) => {\n  if (results) {\n    var LIMIT;\n\n    if (active === \"realEstate\") {\n      LIMIT = 3;\n    } else {\n      LIMIT = 9;\n    }\n\n    const LENGTH = results.length;\n    const [showMore, setShowMore] = useState(true);\n    const [list, setList] = useState(slice(results, 0, LIMIT));\n    const [index, setIndex] = useState(LIMIT);\n    useEffect(() => {\n      if (results.length > 0) setList(slice(results, 0, LIMIT));\n    }, [results, LIMIT]);\n\n    const loadMore = () => {\n      const newIndex = index + LIMIT;\n      const newShowMore = newIndex < LENGTH - 1;\n      const newList = concat(list, slice(results, index, newIndex));\n      setIndex(newIndex);\n      setList(newList);\n      setShowMore(newShowMore);\n    };\n\n    return /*#__PURE__*/React.createElement(\"section\", {\n      className: \"property-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"section-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, \"RESULTS \")), results.length === 0 ? /*#__PURE__*/React.createElement(\"li\", {\n      className: \"col-lg-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }\n    }, \"No results\")) : /*#__PURE__*/React.createElement(TransitionGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CardColumns, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, list.map(result => /*#__PURE__*/React.createElement(Result, {\n      key: result.id,\n      result: result,\n      active: active,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }))), showMore && /*#__PURE__*/React.createElement(\"button\", {\n      onClick: loadMore,\n      className: \"site-btn btn-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 30\n      }\n    }, \" Load More \"))));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, \"Loading...\");\n  }\n};\n\nexport default Results;","map":{"version":3,"sources":["/home/sofi/Documentos/SpatialArdhi/src/components/Results.js"],"names":["React","useState","useEffect","TransitionGroup","Result","CardColumns","slice","concat","Results","results","active","LIMIT","LENGTH","length","showMore","setShowMore","list","setList","index","setIndex","loadMore","newIndex","newShowMore","newList","map","result","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { TransitionGroup } from \"react-transition-group\";\nimport Result from \"./Result\";\nimport { CardColumns } from \"reactstrap\";\nimport {\n  slice, concat,\n} from 'lodash';\n\n\nconst Results = ({ results, active }) => {\n  if (results) {\n    var LIMIT;\n    if (active === \"realEstate\") {\n      LIMIT = 3;\n    }\n    else {\n      LIMIT = 9;\n    }\n\n    const LENGTH = results.length;\n    const [showMore, setShowMore] = useState(true);\n    const [list, setList] = useState(slice(results, 0, LIMIT));\n    const [index, setIndex] = useState(LIMIT);\n\n    useEffect(() => {\n      if (results.length > 0)\n        setList(slice(results, 0, LIMIT));\n    }, [results, LIMIT]);\n\n\n    const loadMore = () => {\n      const newIndex = index + LIMIT;\n      const newShowMore = newIndex < (LENGTH - 1);\n      const newList = concat(list, slice(results, index, newIndex));\n      setIndex(newIndex);\n      setList(newList);\n      setShowMore(newShowMore);\n    }\n\n    return (\n      <section className=\"property-section\">\n        <div className=\"container\">\n          <div className=\"section-title\">\n            <h2>RESULTS </h2>\n          </div>\n          {results.length === 0 ? (\n            <li className=\"col-lg-4\">\n              <h3>No results</h3>\n            </li>\n          ) : (\n              <TransitionGroup>\n                <CardColumns>\n                  {list.map((result) => (\n                    <Result\n                      key={result.id}\n                      result={result}\n                      active={active}\n                    />\n                  ))}\n                </CardColumns>\n                {showMore && <button onClick={loadMore} className=\"site-btn btn-danger\"> Load More </button>}\n\n              </TransitionGroup>\n            )}\n        </div>\n      </section>\n    );\n  }\n  else {\n    return (\n      <div>\n        Loading...\n      </div>\n    )\n  }\n};\n\nexport default Results;\n"]},"metadata":{},"sourceType":"module"}