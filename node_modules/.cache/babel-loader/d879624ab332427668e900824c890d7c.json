{"ast":null,"code":"var _jsxFileName = \"/home/sofi/Documentos/SpatialArdhi/src/context/UsersContext.js\";\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport AuthContext from './auth/AuthContext';\nimport clientAxios from '../config/axios';\nexport const UsersContext = createContext();\n\nconst UsersProvider = props => {\n  const authContext = useContext(AuthContext);\n  const {\n    user,\n    autenticated\n  } = authContext;\n  const [users, saveUsers] = useState([]);\n  const [searchU, searchUsers] = useState({\n    title: ''\n  });\n  const [searchMade, saveSearch] = useState(false);\n  const {\n    title\n  } = searchU;\n  useEffect(() => {\n    if (autenticated && user) {\n      const getUsers = async () => {\n        const response = await clientAxios.get('profiles/?format=json');\n        saveUsers(response.data); // await clientAxios.get('profiles/?format=json').then(res => this.setState({ users: res.users }));\n      };\n\n      getUsers();\n    }\n\n    if (searchMade) {\n      const getSearchUsers = async () => {\n        if (title !== \" \" && title !== undefined) {\n          const response = await clientAxios.get('profiles/?format=json', {\n            params: {\n              search: title\n            }\n          });\n          saveUsers(response.data);\n        }\n      };\n\n      getSearchUsers();\n    }\n  }, [searchU, user]);\n  return /*#__PURE__*/React.createElement(UsersContext.Provider, {\n    value: {\n      users,\n      searchU,\n      searchUsers,\n      saveUsers,\n      saveSearch\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default UsersProvider;","map":{"version":3,"sources":["/home/sofi/Documentos/SpatialArdhi/src/context/UsersContext.js"],"names":["React","createContext","useState","useEffect","useContext","AuthContext","clientAxios","UsersContext","UsersProvider","props","authContext","user","autenticated","users","saveUsers","searchU","searchUsers","title","searchMade","saveSearch","getUsers","response","get","data","getSearchUsers","undefined","params","search","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,EAAoDC,UAApD,QAAsE,OAAtE;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AAEA,OAAO,MAAMC,YAAY,GAAGN,aAAa,EAAlC;;AAEP,MAAMO,aAAa,GAAIC,KAAD,IAAW;AAE7B,QAAMC,WAAW,GAAGN,UAAU,CAACC,WAAD,CAA9B;AACA,QAAM;AAAEM,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAyBF,WAA/B;AAEA,QAAM,CAACG,KAAD,EAAQC,SAAR,IAAqBZ,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAACa,OAAD,EAAUC,WAAV,IAAyBd,QAAQ,CAAC;AACpCe,IAAAA,KAAK,EAAE;AAD6B,GAAD,CAAvC;AAGA,QAAM,CAACC,UAAD,EAAaC,UAAb,IAA2BjB,QAAQ,CAAC,KAAD,CAAzC;AAEA,QAAM;AAAEe,IAAAA;AAAF,MAAYF,OAAlB;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIS,YAAY,IAAID,IAApB,EAA0B;AACtB,YAAMS,QAAQ,GAAG,YAAY;AACzB,cAAMC,QAAQ,GAAG,MAAMf,WAAW,CAACgB,GAAZ,CAAgB,uBAAhB,CAAvB;AACAR,QAAAA,SAAS,CAACO,QAAQ,CAACE,IAAV,CAAT,CAFyB,CAGzB;AACH,OAJD;;AAKAH,MAAAA,QAAQ;AACX;;AAED,QAAIF,UAAJ,EAAgB;AACZ,YAAMM,cAAc,GAAG,YAAY;AAC/B,YAAIP,KAAK,KAAK,GAAV,IAAiBA,KAAK,KAAKQ,SAA/B,EAA0C;AACtC,gBAAMJ,QAAQ,GAAG,MAAMf,WAAW,CAACgB,GAAZ,CAAgB,uBAAhB,EAAyC;AAAEI,YAAAA,MAAM,EAAE;AAAEC,cAAAA,MAAM,EAAEV;AAAV;AAAV,WAAzC,CAAvB;AACAH,UAAAA,SAAS,CAACO,QAAQ,CAACE,IAAV,CAAT;AACC;AAEJ,OANL;;AAOAC,MAAAA,cAAc;AACjB;AAEJ,GArBQ,EAqBN,CAACT,OAAD,EAAUJ,IAAV,CArBM,CAAT;AAuBA,sBACI,oBAAC,YAAD,CAAc,QAAd;AACI,IAAA,KAAK,EAAE;AACHE,MAAAA,KADG;AAEHE,MAAAA,OAFG;AAGHC,MAAAA,WAHG;AAIHF,MAAAA,SAJG;AAKHK,MAAAA;AALG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASKV,KAAK,CAACmB,QATX,CADJ;AAaH,CAjDD;;AAmDA,eAAepB,aAAf","sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\nimport AuthContext from './auth/AuthContext';\nimport clientAxios from '../config/axios';\n\nexport const UsersContext = createContext();\n\nconst UsersProvider = (props) => {\n\n    const authContext = useContext(AuthContext);\n    const { user, autenticated } = authContext;\n\n    const [users, saveUsers] = useState([]);\n    const [searchU, searchUsers] = useState({\n        title: '',\n    });\n    const [searchMade, saveSearch] = useState(false);\n\n    const { title } = searchU;\n\n    useEffect(() => {\n        if (autenticated && user) {\n            const getUsers = async () => {\n                const response = await clientAxios.get('profiles/?format=json');\n                saveUsers(response.data)\n                // await clientAxios.get('profiles/?format=json').then(res => this.setState({ users: res.users }));\n            }\n            getUsers();\n        }\n\n        if (searchMade) {\n            const getSearchUsers = async () => {\n                if (title !== \" \" && title !== undefined) {\n                    const response = await clientAxios.get('profiles/?format=json', { params: { search: title } })\n                    saveUsers(response.data) \n                    }\n         \n                }\n            getSearchUsers();\n        }\n\n    }, [searchU, user]);\n\n    return (\n        <UsersContext.Provider\n            value={{\n                users,\n                searchU,\n                searchUsers,\n                saveUsers,\n                saveSearch,\n            }}\n        >\n            {props.children}\n        </UsersContext.Provider>\n    );\n}\n\nexport default UsersProvider;"]},"metadata":{},"sourceType":"module"}